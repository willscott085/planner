// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "items",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "completed", type: "bool", defaultValue: "false" },
      { name: "due", type: "datetime" },
      { name: "type", type: "multiple" },
      { name: "created", type: "datetime", notNull: true, defaultValue: "now" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Items = InferredTypes["items"];
export type ItemsRecord = Items & XataRecord;

export type DatabaseSchema = {
  items: ItemsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Will-Scott-s-workspace-veusel.eu-west-1.xata.sh/db/whatidid",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
